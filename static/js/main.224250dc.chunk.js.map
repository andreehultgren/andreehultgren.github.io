{"version":3,"sources":["metaInfo.js","components/Timeline.js","styles.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Info","person","firstName","lastName","phoneNumber","imageSrc","title","description","timelineTypes","id","backgroundColor","textColor","icon","SchoolIcon","WorkIcon","StarsIcon","timeline","company","time","type","Timeline","props","handleIDUpdate","typeID","usedIDs","state","includes","setState","filter","concat","render","info","classes","filteredTimeline","item","displayedTimeline","length","style","background","className","filterContainer","map","width","Math","floor","toString","Button","variant","filterButton","onClick","find","timelineElement","contentStyle","color","contentArrowStyle","borderRight","date","dateClassName","dateText","iconStyle","React","Component","withStyles","display","justifyContent","marginLeft","marginRight","marginTop","marginBottom","textAlign","boxShadow","Main","height","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.224250dc.chunk.js","sourcesContent":["import WorkIcon from '@material-ui/icons/Work'\r\nimport SchoolIcon from '@material-ui/icons/School'\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\nconst Info = {\r\n    person: {\r\n        firstName: \"Andree\",\r\n        lastName: \"Hultgren\",\r\n        phoneNumber: \"+46736544491\",\r\n        imageSrc: \"https://wallpaperplay.com/walls/full/c/5/3/34778.jpg\",\r\n        title: \"Electrical engineer with a masters in Machine Learning\",\r\n        description: \"I love complicated things. I am stubborn, therefore I find solutions. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eleifend dictum volutpat. Cras sed ultricies ipsum. In vulputate leo eget sem aliquet, quis aliquet enim fringilla. \"\r\n    },\r\n    timelineTypes: [\r\n        {\r\n            id: 1,\r\n            title: \"Education\",\r\n            backgroundColor: \"#F48024\",\r\n            textColor: \"#FFFFFF\",\r\n            icon: SchoolIcon\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Work\",\r\n            backgroundColor: \"#62B0DF\",\r\n            textColor: \"#FFFFFF\",\r\n            icon: WorkIcon\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Other\",\r\n            backgroundColor: \"#62DFB0\",\r\n            textColor: \"#FFFFFF\",\r\n            icon: StarsIcon\r\n        }\r\n    ],\r\n    timeline: [\r\n        {\r\n            title: \"Masters Degree in Machine Learning\",\r\n            company: \"Royal Institute of Technology\",\r\n            description: \"Masters degree in Machine Learning with a focus on deep learning and computer vision.\",\r\n            time: \"2019 - Present\",\r\n            type: 1,\r\n        },\r\n        {\r\n            title: \"Fullstack Developer\",\r\n            company: \"Skyqraft\",\r\n            description: \"I developed their UI and all logic for both frontend and backend. The work was very successful. 50 new features were released over the span of two months.\",\r\n            time: \"Jun 2019 - Present\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Technical AI Trainer\",\r\n            company: \"Front AI\",\r\n            description: \"I trained conversational AI with managing APIs as my main responsibility.\",\r\n            time: \"Aug 2019 - Aug 2020\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Connection Administrator\",\r\n            company: \"Ellevio\",\r\n            description: \"I managed incoming special orders and dispatched contractors to install a new electrical facility.\",\r\n            time: \"Summer 2019\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Bachelor Degree in Electrical Engineering\",\r\n            company: \"Royal Institute of Technology\",\r\n            description: \"Bachelor degree in Electrical Engineering. My bachelor thesis discussed a motion planning system for autonomous driving.\",\r\n            time: \"2016 - 2019\",\r\n            type: 1,\r\n        },\r\n        {\r\n            title: \"Supervisor\",\r\n            company: \"Haninge municipality\",\r\n            description: \"I guided and introduced teenagers to their first job as facility maintenance.\",\r\n            time: \"Summer 2018\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"IT Support\",\r\n            company: \"BrandskyddsfÃ¶reningen\",\r\n            description: \"I acted as on-site first-line IT support.\",\r\n            time: \"Apr 2017 - Feb 2018\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Senior Techbuddy\",\r\n            company: \"TechBuddy\",\r\n            description: \"I was responsible for providing technical assistance for high profile customers and support for other employees that got stuck when visiting a customer.\",\r\n            time: \"Jan 2017 - Okt 2017\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Missionary\",\r\n            company: \"The Church of Jesus Christ of Latter day Saints\",\r\n            description: \"Teaching and guiding people in the beliefs of the denomination\",\r\n            time: \"Aug 2014 - Aug 2016\",\r\n            type: 3\r\n        },\r\n        {\r\n            title: \"Natural Science\",\r\n            company: \"Fredrika Bremergymnasiet\",\r\n            description: 'High school was spent studying natural sciences with a very good result.',\r\n            time: \"2011 - 2014\",\r\n            type: 1,\r\n        }\r\n    ]\r\n\r\n}\r\nexport default Info\r\n","import React from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport info from '../metaInfo';\r\nimport style from '../styles'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usedIDs: []\r\n        };\r\n    }\r\n\r\n    handleIDUpdate = (typeID) => {\r\n        const { usedIDs } = this.state\r\n\r\n        // If ID exists, remove it\r\n        usedIDs.includes(typeID) ?\r\n            this.setState({ usedIDs: usedIDs.filter(id => id !== typeID) }) :\r\n            this.setState({ usedIDs: usedIDs.concat([typeID]) })\r\n        // If ID doesn't exist, add it\r\n\r\n    }\r\n\r\n    render = () => {\r\n        const { timeline, timelineTypes } = info;\r\n        const { classes } = this.props\r\n        const filteredTimeline = timeline.filter(item => this.state.usedIDs.includes(item.type))\r\n        const displayedTimeline = filteredTimeline.length === 0 ? timeline : filteredTimeline\r\n        return (\r\n            <div style={{ background: \"#FFF\" }}>\r\n                <div className={classes.filterContainer}>\r\n                    {timelineTypes.map(type => {\r\n                        const width = Math.floor(100 / timelineTypes.length).toString()\r\n                        return (\r\n                            <Button\r\n                                variant={this.state.usedIDs.includes(type.id) ? \"info\" : \"outline-info\"}\r\n                                style={{ width: `${width}%` }}\r\n                                className={classes.filterButton}\r\n                                onClick={() => { this.handleIDUpdate(type.id) }}>{type.title}</Button>\r\n                        )\r\n                    })}\r\n                </div >\r\n                <VerticalTimeline className={classes.timeline}>\r\n                    {displayedTimeline.map(item => {\r\n                        const type = timelineTypes.find(type => type.id === item.type)\r\n                        return (<VerticalTimelineElement\r\n                            className={classes.timelineElement}\r\n                            contentStyle={{ background: type.backgroundColor, color: type.textColor }}\r\n                            contentArrowStyle={{ borderRight: `7px solid  ${type.backgroundColor}` }}\r\n                            date={item.time}\r\n                            dateClassName={classes.dateText}\r\n                            iconStyle={{ background: type.backgroundColor, color: type.textColor }}\r\n                            icon={< type.icon />}\r\n                        >\r\n                            <h3>{item.title}</h3>\r\n                            <h4>{item.company}</h4>\r\n                            <p>{item.description}</p>\r\n                        </VerticalTimelineElement>)\r\n                    })}\r\n                </VerticalTimeline>\r\n            </div >\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Timeline)\r\n","export default {\r\n\r\n    dateText: {\r\n        color: \"#333\"\r\n    },\r\n    timeline: {\r\n        \"&::before\": {\r\n            backgroundColor: \"#333\",\r\n        }\r\n    },\r\n    filterContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        width: \"80%\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    },\r\n    filterButton: {\r\n        textAlign: \"center\",\r\n        \"&:focus\": {\r\n            boxShadow: \"none\"\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport Timeline from './Timeline';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ width: \"100%\", backgroundColor: \"#1261A0\", height: 100 }}></div>\r\n            <div style={{ width: \"100%\", backgroundColor: \"#3895D3\", height: 100 }}></div>\r\n            <div style={{ width: \"100%\", backgroundColor: \"#58CCED\", height: 100 }}>\r\n            </div>\r\n\r\n            <Timeline />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport Main from \"./components/main\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}