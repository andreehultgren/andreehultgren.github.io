{"version":3,"sources":["metaInfo.js","views/Timeline.js","views/components/LightSwitch.js","views/Header.tsx","views/main.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Info","person","firstName","lastName","phoneNumber","imageSrc","title","description","skills","links","url","icon","GithubIcon","MailIcon","PhoneIcon","DownloadIcon","theme","headerColor","timelineCenterlineColor","filterButtonBackgroundColor","filterButtonTextColor","timelineTypes","id","backgroundColor","textColor","SchoolIcon","WorkIcon","StarsIcon","timeline","company","time","type","Timeline","props","handleIDUpdate","typeID","usedIDs","state","includes","setState","filter","concat","render","info","filteredTimeline","item","className","map","FormControlLabel","control","Checkbox","checked","style","color","onChange","label","find","contentStyle","background","contentArrowStyle","borderRight","date","dateClassName","iconStyle","React","Component","IOSSwitch","withStyles","root","width","height","padding","margin","spacing","switchBase","transform","transition","opacity","border","thumb","track","borderRadius","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","Header","darkMode","componentDidMount","document","getElementsByTagName","setAttribute","swapTheme","htmlTag","isLightTheme","getAttribute","metaInfo","LightSwitch","link","href","target","rel","src","alt","skill","Main","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4VA+KeA,EAvKF,CACXC,OAAQ,CACNC,UAAW,SACXC,SAAU,WACVC,YAAa,eACbC,SACE,mFACFC,MAAO,qBACPC,YACE,+PACFC,OAAQ,CACN,MACA,QACA,QACA,aACA,QACA,mBACA,aACA,SACA,SAEFC,MAAO,CACL,CACEC,IAAK,uCACLC,KAAMC,KAER,CACEF,IAAK,qCACLC,KAAME,KAER,CACEH,IAAK,mBACLC,KAAMG,KAER,CACEJ,IAAK,oFACLC,KAAMI,OAIZC,MAAO,CACLC,YAAa,UACbC,wBAAyB,OACzBC,4BAA6B,UAC7BC,sBAAuB,QAEzBC,cAAe,CACb,CACEC,GAAI,EACJhB,MAAO,YACPiB,gBAAiB,OACjBC,UAAW,UACXb,KAAMc,KAER,CACEH,GAAI,EACJhB,MAAO,OACPiB,gBAAiB,OACjBC,UAAW,UACXb,KAAMe,KAER,CACEJ,GAAI,EACJhB,MAAO,QACPiB,gBAAiB,OACjBC,UAAW,UACXb,KAAMgB,MAGVC,SAAU,CACR,CACEtB,MAAO,6BACPuB,QAAS,WACTtB,YACE,wOACFuB,KAAM,qBACNC,KAAM,GAER,CACEzB,MAAO,qCACPuB,QAAS,gCACTtB,YACE,wFACFuB,KAAM,sBACNC,KAAM,GAER,CACEzB,MAAO,iCACPuB,QAAS,eACTtB,YACE,gGACFuB,KAAM,sBACNC,KAAM,GAER,CACEzB,MAAO,6BACPuB,QAAS,WACTtB,YACE,4EACFuB,KAAM,sBACNC,KAAM,GAER,CACEzB,MAAO,+BACPuB,QAAS,kDACTtB,YACE,mGACFuB,KAAM,sBACNC,KAAM,GAER,CACEzB,MAAO,2BACPuB,QAAS,UACTtB,YACE,qGACFuB,KAAM,cACNC,KAAM,GAER,CACEzB,MAAO,4CACPuB,QAAS,gCACTtB,YACE,2HACFuB,KAAM,sBACNC,KAAM,GAER,CACEzB,MAAO,aACPuB,QAAS,uBACTtB,YACE,gFACFuB,KAAM,cACNC,KAAM,GAER,CACEzB,MAAO,aACPuB,QAAS,2BACTtB,YAAa,4CACbuB,KAAM,sBACNC,KAAM,GAER,CACEzB,MAAO,mBACPuB,QAAS,YAC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","file":"static/js/main.5fa27ea3.chunk.js","sourcesContent":["import WorkIcon from \"@material-ui/icons/Work\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport GithubIcon from \"@material-ui/icons/GitHub\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\n\nconst Info = {\n  person: {\n    firstName: \"Andree\",\n    lastName: \"Hultgren\",\n    phoneNumber: \"+46736544491\",\n    imageSrc:\n      \"https://raw.githubusercontent.com/andreehultgren/cvpage/master/public/andree.jpg\",\n    title: \"Fullstack Engineer\",\n    description:\n      \"I love complicated things. I am stubborn, therefore I find solutions. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eleifend dictum volutpat. Cras sed ultricies ipsum. In vulputate leo eget sem aliquet, quis aliquet enim fringilla. \",\n    skills: [\n      \"AWS\",\n      \"Azure\",\n      \"Flask\",\n      \"Javascript\",\n      \"Linux\",\n      \"Machine Learning\",\n      \"PostgreSQL\",\n      \"Python\",\n      \"React\",\n    ],\n    links: [\n      {\n        url: \"http://www.github.com/andreehultgren\",\n        icon: GithubIcon,\n      },\n      {\n        url: \"mailto:andree_hultgren@hotmail.com\",\n        icon: MailIcon,\n      },\n      {\n        url: \"tel:+46736544491\",\n        icon: PhoneIcon,\n      },\n      {\n        url: \"https://github.com/andreehultgren/cvpage/raw/master/public/CV_Andree_Hultgren.pdf\",\n        icon: DownloadIcon,\n      },\n    ],\n  },\n  theme: {\n    headerColor: \"#E0F0FF\",\n    timelineCenterlineColor: \"#ddd\",\n    filterButtonBackgroundColor: \"#BB89ED\",\n    filterButtonTextColor: \"#FFF\",\n  },\n  timelineTypes: [\n    {\n      id: 1,\n      title: \"Education\",\n      backgroundColor: \"#393\",\n      textColor: \"#FFFFFF\",\n      icon: SchoolIcon,\n    },\n    {\n      id: 2,\n      title: \"Work\",\n      backgroundColor: \"#D33\",\n      textColor: \"#FFFFFF\",\n      icon: WorkIcon,\n    },\n    {\n      id: 3,\n      title: \"Other\",\n      backgroundColor: \"#33A\",\n      textColor: \"#FFFFFF\",\n      icon: StarsIcon,\n    },\n  ],\n  timeline: [\n    {\n      title: \"Senior Fullstack Developer\",\n      company: \"Skyqraft\",\n      description:\n        \"I design, implement, test, monitor and maintaint the fullstack application at Skyqraft. I also manage the DevOps side of the service. I am the sole developer for the fullstack side of this tech-centered company with global reach.\",\n      time: \"Jun 2020 - Present\",\n      type: 2,\n    },\n    {\n      title: \"Masters Degree in Machine Learning\",\n      company: \"Royal Institute of Technology\",\n      description:\n        \"Masters degree in Machine Learning with a focus on deep learning and computer vision.\",\n      time: \"Aug 2019 - Jun 2021\",\n      type: 1,\n    },\n    {\n      title: \"Fullstack Developer Consultant\",\n      company: \"Hultan IT AB\",\n      description:\n        \"I ran a consultancy company where I sell technical services focused on fullstack development,\",\n      time: \"Sep 2019 - May 2021\",\n      type: 2,\n    },\n    {\n      title: \"AI Trainer - Tech oriented\",\n      company: \"Front AI\",\n      description:\n        \"I trained conversational AI with managing APIs as my main responsibility.\",\n      time: \"Aug 2019 - Aug 2020\",\n      type: 2,\n    },\n    {\n      title: \"Teacher in religious studies\",\n      company: \"The Church of Jesus Christ of Latter-day Saints\",\n      description:\n        \"I taught fundamental teachings of my beliefs to a class of approximately 15 students aged 14-18.\",\n      time: \"Aug 2016 - Dec 2019\",\n      type: 3,\n    },\n    {\n      title: \"Connection Administrator\",\n      company: \"Ellevio\",\n      description:\n        \"I managed incoming special orders and dispatched contractors to install a new electrical facility.\",\n      time: \"Summer 2019\",\n      type: 2,\n    },\n    {\n      title: \"Bachelor Degree in Electrical Engineering\",\n      company: \"Royal Institute of Technology\",\n      description:\n        \"Bachelor degree in Electrical Engineering. My bachelor thesis discussed a motion planning system for autonomous driving.\",\n      time: \"Aug 2016 - Jun 2019\",\n      type: 1,\n    },\n    {\n      title: \"Supervisor\",\n      company: \"Haninge municipality\",\n      description:\n        \"I guided and introduced teenagers to their first job as facility maintenance.\",\n      time: \"Summer 2018\",\n      type: 2,\n    },\n    {\n      title: \"IT Support\",\n      company: \"Brandskyddsföreningen\",\n      description: \"I acted as on-site first-line IT support.\",\n      time: \"Apr 2017 - Feb 2018\",\n      type: 2,\n    },\n    {\n      title: \"Senior Techbuddy\",\n      company: \"TechBuddy\",\n      description:\n        \"I was responsible for providing technical assistance for high profile customers and support for other employees that got stuck when visiting a customer.\",\n      time: \"Jan 2017 - Okt 2017\",\n      type: 2,\n    },\n    {\n      title: \"Missionary\",\n      company: \"The Church of Jesus Christ of Latter day Saints\",\n      description:\n        \"Teaching and guiding people in the beliefs of the denomination\",\n      time: \"Aug 2014 - Aug 2016\",\n      type: 3,\n    },\n    {\n      title: \"Natural Science\",\n      company: \"Fredrika Bremergymnasiet\",\n      description:\n        \"High school was spent studying natural sciences with a very good result.\",\n      time: \"2011 - 2014\",\n      type: 1,\n    },\n  ],\n};\nexport default Info;\n","import React from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport info from '../metaInfo';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nclass Timeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usedIDs: info.timelineTypes.map(item => item.id)\n        };\n    }\n\n    handleIDUpdate = (typeID) => {\n        const { usedIDs } = this.state\n\n        // If ID exists, remove it\n        usedIDs.includes(typeID) ?\n            this.setState({ usedIDs: usedIDs.filter(id => id !== typeID) }) :\n            this.setState({ usedIDs: usedIDs.concat([typeID]) })\n        // If ID doesn't exist, add it\n\n    }\n\n    render = () => {\n        const { timeline, timelineTypes } = info;\n        const filteredTimeline = timeline.filter(item => this.state.usedIDs.includes(item.type))\n        return (\n            <div>\n                <div className=\"filterContainer\">\n                    {timelineTypes.map(type => {\n                        return (\n                            <FormControlLabel\n                                control={<Checkbox checked={this.state.usedIDs.includes(type.id)} style={{ color: type.backgroundColor }} onChange={() => { this.handleIDUpdate(type.id) }} />}\n                                label={type.title}\n                                className=\"filterButtons\"\n                            />)\n                    })}\n                </div >\n                <VerticalTimeline className=\"timeline\">\n                    {filteredTimeline.map(item => {\n                        const type = timelineTypes.find(type => type.id === item.type)\n                        return (<VerticalTimelineElement\n                            className=\"timelineElement\"\n                            contentStyle={{ background: type.backgroundColor, color: type.textColor }}\n                            contentArrowStyle={{ borderRight: `7px solid  ${type.backgroundColor}` }}\n                            date={item.time}\n                            dateClassName=\"dateText\"\n                            iconStyle={{ background: type.backgroundColor, color: type.textColor }}\n                            icon={< type.icon />}\n                        >\n                            <h3>{item.title}</h3>\n                            <h4>{item.company}</h4>\n                            <p>{item.description}</p>\n                        </VerticalTimelineElement>)\n                    })}\n                </VerticalTimeline>\n            </div >\n\n\n        )\n    }\n}\n\nexport default Timeline\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\n// Taken from https://material-ui.com/components/switches/ and modified\nconst IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      transform: 'translateX(0px)',\n      transition: \"transform 0.5s\",\n      '&$checked': {\n        transform: 'translateX(16px)',\n        transition: \"transform 0.5s\",\n        color: \"#000000\",             // Thumb color on dark\n        '& + $track': {\n          backgroundColor: '#FFFFFF', // Background color on dark\n          opacity: 1,\n          border: 'none',\n        },\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: \"1px solid #000000\",  // Border color on light\n      backgroundColor: \"#000000\",   // Background color on light\n      opacity: 1,\n      transition: \"transform 0.5s\"\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  });\n\n  export default IOSSwitch;\n","import React from \"react\";\nimport metaInfo from \"../metaInfo\";\nimport LightSwitch from \"./components/LightSwitch\";\nimport \"react-vertical-timeline-component/style.min.css\";\n\ninterface IState {\n  darkMode: boolean;\n}\ninterface IProps {}\n\nclass Header extends React.Component<IProps | IState> {\n  state = {\n    darkMode: false,\n  };\n\n  componentDidMount = () => {\n    const htmlTag = document.getElementsByTagName(\"html\")[0];\n    htmlTag.setAttribute(\"data-theme\", \"light\");\n    this.setState({ darkMode: false });\n  };\n\n  swapTheme = () => {\n    const htmlTag = document.getElementsByTagName(\"html\")[0];\n    const isLightTheme = htmlTag.getAttribute(\"data-theme\") === \"light\";\n    htmlTag.setAttribute(\"data-theme\", isLightTheme ? \"dark\" : \"light\");\n    this.setState({ darkMode: isLightTheme });\n  };\n\n  render = () => {\n    const { person } = metaInfo;\n    return (\n      <div className=\"header\">\n        <div className=\"leftRight\">\n          <LightSwitch\n            checked={this.state.darkMode}\n            onChange={this.swapTheme}\n          />\n\n          <div className=\"linkSection\">\n            {person.links.map((link) => (\n              <a\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ margin: 10 }}\n              >\n                <link.icon />\n              </a>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"imgContainer\">\n          <img src={person.imageSrc} alt={\"Profile\"} />\n        </div>\n\n        <h1>\n          {person.firstName} {person.lastName}\n        </h1>\n        <h4>{person.title}</h4>\n        <div className=\"skillContainer\">\n          {person.skills.map((skill) => (\n            <div>{skill}</div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Header;\n","import React from 'react';\nimport 'react-vertical-timeline-component/style.min.css';\nimport Timeline from './Timeline';\nimport Header from './Header'\n\nfunction Main() {\n    return (\n        <div>\n            <Header />\n            <Timeline />\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react';\nimport Main from \"./views/main\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles/main.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}