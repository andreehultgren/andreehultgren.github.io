{"version":3,"sources":["metaInfo.js","views/Timeline.js","views/components/LightSwitch.js","views/Header.tsx","views/main.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Info","person","firstName","lastName","phoneNumber","imageSrc","title","description","skills","links","url","icon","GithubIcon","MailIcon","PhoneIcon","DownloadIcon","theme","headerColor","timelineCenterlineColor","filterButtonBackgroundColor","filterButtonTextColor","timelineTypes","id","backgroundColor","textColor","SchoolIcon","WorkIcon","StarsIcon","timeline","company","time","type","Timeline","props","handleIDUpdate","typeID","usedIDs","state","includes","setState","filter","concat","render","info","filteredTimeline","item","className","map","FormControlLabel","control","Checkbox","checked","style","color","onChange","label","find","contentStyle","background","contentArrowStyle","borderRight","date","dateClassName","iconStyle","React","Component","IOSSwitch","withStyles","root","width","height","padding","margin","spacing","switchBase","transform","transition","opacity","border","thumb","track","borderRadius","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","Header","darkMode","componentDidMount","document","getElementsByTagName","setAttribute","swapTheme","htmlTag","isLightTheme","getAttribute","metaInfo","LightSwitch","link","href","target","rel","src","alt","skill","Main","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.52ffb5d4.chunk.js","sourcesContent":["import WorkIcon from '@material-ui/icons/Work'\r\nimport SchoolIcon from '@material-ui/icons/School'\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport GithubIcon from '@material-ui/icons/GitHub'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport DownloadIcon from '@material-ui/icons/GetApp'\r\n\r\nconst Info = {\r\n    person: {\r\n        firstName: \"Andree\",\r\n        lastName: \"Hultgren\",\r\n        phoneNumber: \"+46736544491\",\r\n        imageSrc: \"https://raw.githubusercontent.com/andreehultgren/cvpage/master/public/andree.jpg\",\r\n        title: \"Machine Learning and Electrical Engineer\",\r\n        description: \"I love complicated things. I am stubborn, therefore I find solutions. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eleifend dictum volutpat. Cras sed ultricies ipsum. In vulputate leo eget sem aliquet, quis aliquet enim fringilla. \",\r\n        skills: [\r\n            \"Python\",\r\n            \"React\",\r\n            \"Machine Learning\",\r\n            \"Django\"\r\n        ],\r\n        links: [\r\n            {\r\n                url: \"http://www.github.com/andreehultgren\",\r\n                icon: GithubIcon\r\n            },\r\n            {\r\n                url: \"mailto:andree_hultgren@hotmail.com\",\r\n                icon: MailIcon\r\n            },\r\n            {\r\n                url: \"tel:+46736544491\",\r\n                icon: PhoneIcon\r\n            },\r\n            {\r\n                url: \"https://github.com/andreehultgren/cvpage/raw/master/public/CV_Andree_Hultgren.pdf\",\r\n                icon: DownloadIcon\r\n            }\r\n        ]\r\n    },\r\n    theme: {\r\n        headerColor: \"#E0F0FF\",\r\n        timelineCenterlineColor: \"#ddd\",\r\n        filterButtonBackgroundColor: \"#BB89ED\",\r\n        filterButtonTextColor: \"#FFF\"\r\n    },\r\n    timelineTypes: [\r\n        {\r\n            id: 1,\r\n            title: \"Education\",\r\n            backgroundColor: \"#F48024\",\r\n            textColor: \"#FFFFFF\",\r\n            icon: SchoolIcon\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Work\",\r\n            backgroundColor: \"#62B0DF\",\r\n            textColor: \"#FFFFFF\",\r\n            icon: WorkIcon\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Other\",\r\n            backgroundColor: \"#62DFB0\",\r\n            textColor: \"#FFFFFF\",\r\n            icon: StarsIcon\r\n        }\r\n    ],\r\n    timeline: [\r\n        {\r\n            title: \"Masters Degree in Machine Learning\",\r\n            company: \"Royal Institute of Technology\",\r\n            description: \"Masters degree in Machine Learning with a focus on deep learning and computer vision.\",\r\n            time: \"2019 - Present\",\r\n            type: 1,\r\n        },\r\n        {\r\n            title: \"Fullstack Developer\",\r\n            company: \"Skyqraft\",\r\n            description: \"I developed their UI and all logic for both frontend and backend. The work was very successful. 50 new features were released over the span of two months.\",\r\n            time: \"Jun 2020 - Present\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Entrepreneur\",\r\n            company: \"Hultan IT AB\",\r\n            description: \"I built a company where I sell technical services focused on fullstack development,\",\r\n            time: \"Sep 2019 - Present\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Technical AI Trainer\",\r\n            company: \"Front AI\",\r\n            description: \"I trained conversational AI with managing APIs as my main responsibility.\",\r\n            time: \"Aug 2019 - Aug 2020\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Teacher in religious studies\",\r\n            company: \"The Church of Jesus Christ of Latter-day Saints\",\r\n            description: \"I taught fundamental teachings of my beliefs to a class of approximately 15 students aged 14-18.\",\r\n            time: \"Aug 2016 - Dec 2019\",\r\n            type: 3\r\n        },\r\n        {\r\n            title: \"Connection Administrator\",\r\n            company: \"Ellevio\",\r\n            description: \"I managed incoming special orders and dispatched contractors to install a new electrical facility.\",\r\n            time: \"Summer 2019\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Bachelor Degree in Electrical Engineering\",\r\n            company: \"Royal Institute of Technology\",\r\n            description: \"Bachelor degree in Electrical Engineering. My bachelor thesis discussed a motion planning system for autonomous driving.\",\r\n            time: \"2016 - 2019\",\r\n            type: 1,\r\n        },\r\n        {\r\n            title: \"Supervisor\",\r\n            company: \"Haninge municipality\",\r\n            description: \"I guided and introduced teenagers to their first job as facility maintenance.\",\r\n            time: \"Summer 2018\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"IT Support\",\r\n            company: \"Brandskyddsföreningen\",\r\n            description: \"I acted as on-site first-line IT support.\",\r\n            time: \"Apr 2017 - Feb 2018\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Senior Techbuddy\",\r\n            company: \"TechBuddy\",\r\n            description: \"I was responsible for providing technical assistance for high profile customers and support for other employees that got stuck when visiting a customer.\",\r\n            time: \"Jan 2017 - Okt 2017\",\r\n            type: 2\r\n        },\r\n        {\r\n            title: \"Missionary\",\r\n            company: \"The Church of Jesus Christ of Latter day Saints\",\r\n            description: \"Teaching and guiding people in the beliefs of the denomination\",\r\n            time: \"Aug 2014 - Aug 2016\",\r\n            type: 3\r\n        },\r\n        {\r\n            title: \"Natural Science\",\r\n            company: \"Fredrika Bremergymnasiet\",\r\n            description: 'High school was spent studying natural sciences with a very good result.',\r\n            time: \"2011 - 2014\",\r\n            type: 1,\r\n        }\r\n    ]\r\n\r\n}\r\nexport default Info\r\n","import React from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport info from '../metaInfo';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usedIDs: info.timelineTypes.map(item => item.id)\r\n        };\r\n    }\r\n\r\n    handleIDUpdate = (typeID) => {\r\n        const { usedIDs } = this.state\r\n\r\n        // If ID exists, remove it\r\n        usedIDs.includes(typeID) ?\r\n            this.setState({ usedIDs: usedIDs.filter(id => id !== typeID) }) :\r\n            this.setState({ usedIDs: usedIDs.concat([typeID]) })\r\n        // If ID doesn't exist, add it\r\n\r\n    }\r\n\r\n    render = () => {\r\n        const { timeline, timelineTypes } = info;\r\n        const filteredTimeline = timeline.filter(item => this.state.usedIDs.includes(item.type))\r\n        return (\r\n            <div>\r\n                <div className=\"filterContainer\">\r\n                    {timelineTypes.map(type => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={this.state.usedIDs.includes(type.id)} style={{ color: type.backgroundColor }} onChange={() => { this.handleIDUpdate(type.id) }} />}\r\n                                label={type.title}\r\n                                className=\"filterButtons\"\r\n                            />)\r\n                    })}\r\n                </div >\r\n                <VerticalTimeline className=\"timeline\">\r\n                    {filteredTimeline.map(item => {\r\n                        const type = timelineTypes.find(type => type.id === item.type)\r\n                        return (<VerticalTimelineElement\r\n                            className=\"timelineElement\"\r\n                            contentStyle={{ background: type.backgroundColor, color: type.textColor }}\r\n                            contentArrowStyle={{ borderRight: `7px solid  ${type.backgroundColor}` }}\r\n                            date={item.time}\r\n                            dateClassName=\"dateText\"\r\n                            iconStyle={{ background: type.backgroundColor, color: type.textColor }}\r\n                            icon={< type.icon />}\r\n                        >\r\n                            <h3>{item.title}</h3>\r\n                            <h4>{item.company}</h4>\r\n                            <p>{item.description}</p>\r\n                        </VerticalTimelineElement>)\r\n                    })}\r\n                </VerticalTimeline>\r\n            </div >\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// Taken from https://material-ui.com/components/switches/ and modified\r\nconst IOSSwitch = withStyles((theme) => ({\r\n    root: {\r\n      width: 42,\r\n      height: 26,\r\n      padding: 0,\r\n      margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      transform: 'translateX(0px)',\r\n      transition: \"transform 0.5s\",\r\n      '&$checked': {\r\n        transform: 'translateX(16px)',\r\n        transition: \"transform 0.5s\",\r\n        color: \"#000000\",             // Thumb color on dark\r\n        '& + $track': {\r\n          backgroundColor: '#FFFFFF', // Background color on dark\r\n          opacity: 1,\r\n          border: 'none',\r\n        },\r\n      }\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: \"1px solid #000000\",  // Border color on light\r\n      backgroundColor: \"#000000\",   // Background color on light\r\n      opacity: 1,\r\n      transition: \"transform 0.5s\"\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n  }))(({ classes, ...props }) => {\r\n    return (\r\n      <Switch\r\n        focusVisibleClassName={classes.focusVisible}\r\n        disableRipple\r\n        classes={{\r\n          root: classes.root,\r\n          switchBase: classes.switchBase,\r\n          thumb: classes.thumb,\r\n          track: classes.track,\r\n          checked: classes.checked,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  });\r\n\r\n  export default IOSSwitch;\r\n","import  React       from    'react';\r\nimport  metaInfo    from    '../metaInfo';\r\nimport LightSwitch  from    \"./components/LightSwitch\";\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\ninterface IState{\r\n    darkMode: boolean;\r\n}\r\ninterface IProps{}\r\n\r\nclass Header extends React.Component<IProps|IState> {\r\n\r\n    state = {\r\n        darkMode: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const htmlTag = document.getElementsByTagName(\"html\")[0]\r\n        htmlTag.setAttribute(\"data-theme\", \"light\")\r\n        this.setState({darkMode: false})\r\n    }\r\n\r\n    swapTheme = () => {\r\n        const htmlTag = document.getElementsByTagName(\"html\")[0]\r\n        const isLightTheme = htmlTag.getAttribute(\"data-theme\") === \"light\"\r\n        htmlTag.setAttribute(\"data-theme\", isLightTheme ? \"dark\" : \"light\")\r\n        this.setState({darkMode: isLightTheme})\r\n    }\r\n\r\n    render = () => {\r\n        const { person } = metaInfo\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"leftRight\">\r\n                    <LightSwitch checked={this.state.darkMode} onChange={this.swapTheme}/>\r\n                    \r\n                    <div className=\"linkSection\">\r\n                        {person.links.map(link => <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\" style={{margin:10}}><link.icon /></a>)}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"imgContainer\">\r\n                    <img src={person.imageSrc} alt={\"Profile\"} />\r\n                </div>\r\n\r\n                <h1>{person.firstName} {person.lastName}</h1>\r\n                <h4>{person.title}</h4>\r\n                <div className=\"skillContainer\">\r\n                    {person.skills.map(skill => <div>{skill}</div>)}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport Timeline from './Timeline';\r\nimport Header from './Header'\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Timeline />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\r\nimport Main from \"./views/main\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./styles/main.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}